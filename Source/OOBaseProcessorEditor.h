/*
 ==============================================================================
 
 This file was auto-generated by the Introjucer!
 
 It contains the basic framework code for a JUCE plugin editor.
 
 ==============================================================================
 */

#ifndef PLUGINEDITOR_H_INCLUDED
#define PLUGINEDITOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "OOBaseAudioProcessor.h"


//==============================================================================
/**
 */
class OOBaseProcessorEditor  : public AudioProcessorEditor,AudioProcessorListener
{
public:
    OOBaseProcessorEditor (OOBaseAudioProcessor&);
    virtual ~OOBaseProcessorEditor();
    
    //==============================================================================
    
    bool hasToRepaint;
    virtual void paint (Graphics&) override;
    virtual void resized() override;
    
    virtual void audioProcessorParameterChanged (AudioProcessor* processor,
                                                 int parameterIndex,
                                                 float newValue) override;
    
    virtual void audioProcessorChanged (AudioProcessor* processor) override;
    class Repainter : public AsyncUpdater{
    public:
        Repainter(OOBaseProcessorEditor* o):owner(o){
            
        }
        
        virtual void handleAsyncUpdate() override{
            jassert(owner!= nullptr);
            owner->repaint();
        };
        
        OOBaseProcessorEditor * owner;
    };
private:
    // This reference is provided as a quick way for your editor to
    // access the processor object that created it.
    OOBaseAudioProcessor& processor;
    Repainter repainter;
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (OOBaseProcessorEditor)
};


#endif  // PLUGINEDITOR_H_INCLUDED
